<launch>

  <arg name="world_name" default="real_world"/>
  <arg name="sensorOffsetX" default="0.3"/>
  <arg name="sensorOffsetY" default="0.0"/>
  <arg name="cameraOffsetZ" default="0.0"/>
  <arg name="vehicleX" default="0.0"/>
  <arg name="vehicleY" default="0.0"/>
  <arg name="checkTerrainConn" default="true"/>

  <node pkg="joy" exec="joy_node" name="ps3_joy" output="screen" >
    <param name="dev" value="/dev/input/js0" />
    <param name="deadzone" value="0.12" />
    <param name="autorepeat_rate" value="0.0" />
  </node>
  
  <!-- <node pkg="go2_h264_repub" exec="go2_h264_repub" name="go2_h264_repub" output="screen">
    <param name="multicast_iface" value="enp3s0"/> 
  </node> -->

  <include file="$(find-pkg-share point_lio_unilidar)/launch/mapping_utlidar.launch">
    <arg name="rviz" value="false"/>
  </include>

  <include file="$(find-pkg-share local_planner)/launch/local_planner.launch" >
    <arg name="sensorOffsetX" value="$(var sensorOffsetX)" />
    <arg name="sensorOffsetY" value="$(var sensorOffsetY)" />
    <arg name="cameraOffsetZ" value="$(var cameraOffsetZ)"/>
    <arg name="goalX" value="$(var vehicleX)"/>
    <arg name="goalY" value="$(var vehicleY)"/>
  </include>

  <include file="$(find-pkg-share terrain_analysis)/launch/terrain_analysis.launch" />

  <!-- <include file="$(find-pkg-share terrain_analysis_ext)/launch/terrain_analysis_ext.launch" >
    <arg name="checkTerrainConn" value="$(var checkTerrainConn)"/>
  </include> -->

  <!-- <include file="$(find-pkg-share sensor_scan_generation)/launch/sensor_scan_generation.launch" /> -->

  <!-- <include file="$(find-pkg-share visualization_tools)/launch/visualization_tools.launch" >
    <arg name="world_name" value="$(var world_name)"/>
  </include> -->

  <node launch-prefix="nice" pkg="rviz2" exec="rviz2" name="rvizGA" args="-d $(find-pkg-share vehicle_simulator)/rviz/vehicle_simulator.rviz"/>

  <node pkg="tf2_ros" exec="static_transform_publisher" name="loamInterfaceTransPubMap" args="0 0 0 0 0 0 /map /camera_init"/>

  <node pkg="tf2_ros" exec="static_transform_publisher" name="loamInterfaceTransPubVehicle" args="0 0 0 0 0 0 /aft_mapped /sensor"/>

</launch>
